{"version":3,"sources":["scripts/main.js"],"names":["mainField","score","mainLength","blockGameClick","moved","button","document","querySelector","fieldRows","querySelectorAll","gameScore","messageStart","messageLose","messageWin","randomNumber","Math","random","addNumber","freeTabRows","forEach","row","indexRow","cell","indexCell","push","length","floor","r","c","updateFieldCell","children","innerHTML","className","endOfTheGame","arraysEqual","arr1","arr2","i","blockGame","filterZero","filter","slider","newRow","classList","remove","moveRight","reverse","moveLeft","moveUp","column","newColumn","moveDown","freeCell","some","addEventListener","contains","add","confirm","e","prevField","JSON","parse","stringify","code"],"mappings":"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","file":"main.b4b8b5da.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// ########################################################\n// -----------------Logic and main selectors---------------\n// ########################################################\n\nlet mainField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nlet score = 0;\nconst mainLength = 4;\nlet blockGameClick = false;\nlet moved = false;\n\nconst button = document.querySelector('.button');\nconst fieldRows = document.querySelectorAll('.field-row');\nconst gameScore = document.querySelector('.game-score');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\n// ##########################################################\n// ------------------Main button logic-----------------------\n// ##########################################################\n\nbutton.addEventListener('click', () => {\n  blockGameClick = true;\n\n  if (button.classList.contains('start')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.innerHTML = 'Restart';\n    messageStart.classList.add('hidden');\n\n    addNumber();\n    addNumber();\n    updateFieldCell();\n  } else if (button.classList.contains('restart')) {\n    if (messageLose.classList.contains('hidden')) {\n      // eslint-disable-next-line no-undef\n      if (!confirm(\n        'Are you sure you want to start a new game? All progress will be lost.'\n      )) {\n        return;\n      }\n    }\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n\n    mainField = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    score = 0;\n    addNumber();\n    addNumber();\n    updateFieldCell();\n  }\n});\n\n// #############################################################\n// ----------------------------Randomizer-----------------------\n// #############################################################\n\nfunction randomNumber() {\n  return Math.random() >= 0.9 ? 4 : 2;\n};\n// #############################################################\n// -----------------------Adding new number---------------------\n// #############################################################\n\nfunction addNumber() {\n  const freeTabRows = [];\n\n  mainField.forEach((row, indexRow) => {\n    row.forEach((cell, indexCell) => {\n      if (cell === 0) {\n        freeTabRows.push([indexRow, indexCell]);\n      }\n    });\n  });\n\n  if (freeTabRows.length === 0) {\n    return;\n  }\n\n  const [r, c] = freeTabRows[Math.floor(Math.random() * freeTabRows.length)];\n\n  mainField[r][c] = randomNumber();\n};\n// ##########################################################################\n// -----------------------Updating cells in game-----------------------------\n// ##########################################################################\n\nfunction updateFieldCell() {\n  for (let r = 0; r < mainLength; r++) {\n    for (let c = 0; c < mainLength; c++) {\n      if (mainField[r][c] === 0) {\n        fieldRows[r].children[c].innerHTML = '';\n        fieldRows[r].children[c].className = 'field-cell';\n      } else {\n        fieldRows[r].children[c].innerHTML = mainField[r][c];\n\n        fieldRows[r].children[c].className = `\n        field-cell field-cell--${mainField[r][c]}\n        `;\n      }\n    }\n  }\n\n  endOfTheGame();\n  gameScore.innerHTML = score;\n}\n\n// #####################################################################\n// ------------------------Arrow keys implementation--------------------\n// #####################################################################\n\nfunction arraysEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction blockGame() {\n  for (let r = 0; r < mainLength; r++) {\n    for (let c = 0; c < mainLength; c++) {\n      if (mainField[r][c] === 2048) {\n        return false;\n      }\n    }\n  }\n}\n\ndocument.addEventListener('keyup', (e) => {\n  if ((blockGame() === false) || blockGameClick === false) {\n    return;\n  }\n\n  const prevField = JSON.parse(JSON.stringify(mainField));\n\n  switch (e.code) {\n    case 'ArrowRight':\n      moveRight();\n      break;\n\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n\n    case 'ArrowUp':\n      moveUp();\n      break;\n\n    case 'ArrowDown':\n      moveDown();\n      break;\n\n    default:\n      return;\n  }\n\n  if (!arraysEqual(prevField, mainField) && moved) {\n    addNumber();\n  }\n\n  moved = false;\n\n  updateFieldCell();\n});\n\n// #################################################################\n// -------------Implementation of each click and slider-------------\n// ##################################################################\n\nfunction filterZero(row) {\n  return row.filter(r => r !== 0);\n}\n\nfunction slider(row) {\n  let newRow = row;\n\n  newRow = filterZero(newRow);\n\n  for (let i = 0; i < newRow.length; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score += newRow[i];\n\n      if (newRow[i] === 2048) {\n        messageWin.classList.remove('hidden');\n      }\n    }\n  }\n\n  newRow = filterZero(newRow);\n\n  while (newRow.length < mainLength) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\n// ---Moving right-----\n\nfunction moveRight() {\n  for (let r = 0; r < mainLength; r++) {\n    const row = mainField[r];\n\n    row.reverse();\n\n    const newRow = slider(row);\n\n    if (!arraysEqual(row, newRow)) {\n      moved = true;\n    }\n\n    mainField[r] = newRow.reverse();\n  }\n}\n\n// ---Moving left-----\n\nfunction moveLeft() {\n  for (let r = 0; r < mainLength; r++) {\n    const newRow = slider(mainField[r]);\n\n    if (!arraysEqual(mainField[r], newRow)) {\n      moved = true;\n    }\n\n    mainField[r] = newRow;\n  }\n}\n\n// ---Moving up-----\n\nfunction moveUp() {\n  for (let c = 0; c < mainLength; c++) {\n    const column = [];\n\n    for (let r = 0; r < mainLength; r++) {\n      column.push(mainField[r][c]);\n    }\n\n    const newColumn = slider(column);\n\n    // Проверяем, произошли ли изменения\n    if (!arraysEqual(column, newColumn)) {\n      moved = true;\n    }\n\n    for (let r = 0; r < mainLength; r++) {\n      mainField[r][c] = newColumn[r];\n    }\n  }\n}\n\n// ---Moving down-----\n\nfunction moveDown() {\n  for (let c = 0; c < mainLength; c++) {\n    const column = [];\n\n    for (let r = mainLength - 1; r >= 0; r--) {\n      column.push(mainField[r][c]);\n    }\n\n    const newColumn = slider(column);\n\n    // Проверяем, произошли ли изменения\n    if (!arraysEqual(column, newColumn)) {\n      moved = true;\n    }\n\n    for (let r = mainLength - 1; r >= 0; r--) {\n      mainField[r][c] = newColumn[mainLength - 1 - r];\n    }\n  }\n}\n\n// #################################################################\n// ----------------------Lose of the game logic----------------------\n// #################################################################\n\nfunction endOfTheGame() {\n  const freeCell = mainField.some(r => r.some(c => c === 0));\n\n  if (freeCell) {\n    return;\n  }\n\n  for (let r = 0; r < mainLength; r++) {\n    for (let c = 0; c < mainLength - 1; c++) {\n      if (mainField[r][c] === mainField[r][c + 1]\n        || mainField[c][r] === mainField[c + 1][r]) {\n        return;\n      }\n    }\n  }\n\n  messageLose.classList.remove('hidden');\n}\n"]}